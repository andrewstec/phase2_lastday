@model Organic_Launch.Farm

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Farm</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.farmID)

        <div class="form-group">
            @Html.LabelFor(model => model.farmName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.farmName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.farmName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.farmProfile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.farmProfile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.farmProfile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.farmCity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.farmCity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.farmCity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.farmProvince, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.farmProvince, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.farmProvince, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.farmZip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.farmZip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.farmZip, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (ViewBag.SavedChanges != null)
                {

            <blockquote style="color: green">@ViewBag.SavedChanges</blockquote>

        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                                @if (ViewBag.SavedChanges != null)
                {

                          <blockquote style="color: green">@ViewBag.SavedChanges</blockquote>      

                }
                <input type="submit" value="Save" class="btn btn-default" />

            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
